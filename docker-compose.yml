version: '3.6'
services:
  dev:
    container_name: go_root
    env_file: ./.env
    build:
      context: .
      target: dev
      dockerfile: ./dockerfile
    ports:
      - "3001:3001"
    volumes:
      - .:/app
    restart: unless-stopped

  postgres:
    image: postgres:12
    restart: always
    logging:
      driver: "json-file"
      options:
        max-file: "1"
        max-size: "1m"
    volumes:
    - db_data:/var/lib/postgresql/data
    - ./db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  graphql-engine:
    image: hasura/graphql-engine:v2.15.0
    ports:
    - "8080:8080"
    logging:
      driver: "json-file"
      options:
        max-file: "1"
        max-size: "1m"
    depends_on:
    - "postgres"
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      HASURA_GRAPHQL_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}

volumes:
  db_data: